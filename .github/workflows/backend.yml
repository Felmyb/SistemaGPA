name: Backend CI

on:
  push:
    paths:
      - 'AgilePM/AgilePM-API/**'
  pull_request:
    paths:
      - 'AgilePM/AgilePM-API/**'

jobs:
  build-test-sonar-owasp:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: adminpass
          POSTGRES_DB: agilepm
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      DATABASE_URL: postgres://admin:adminpass@localhost:5432/agilepm
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
      SONAR_ORG: ${{ secrets.SONAR_ORG }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: |
          cd AgilePM/AgilePM-API
          npm install
      - name: Run tests with coverage
        run: |
          cd AgilePM/AgilePM-API
          npm run test -- --coverage
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: AgilePM/AgilePM-API
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_ORG: ${{ secrets.SONAR_ORG }}
      - name: Start API
        run: |
          cd AgilePM/AgilePM-API
          npm run build
          nohup npm start &
      - name: OWASP ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.10.0
        with:
          target: 'http://localhost:8080/'
          fail_action: false
          allow_issue_writing: false
        continue-on-error: true
      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-report
          path: report.html
